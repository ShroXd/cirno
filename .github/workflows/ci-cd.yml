name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TEAM_COLOR: always
  NODE_VERSION: 20.18.0
  RUST_VERSION: 1.80.0
  PNPM_VERSION: 9.12.2
  DOCKER_IMAGE: shroxdf/cirno

jobs:
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "./web/pnpm-lock.yaml"

      - name: Display environment info
        run: |
          node --version
          pnpm --version
          pwd
          ls -la

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build

  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and run backend checks
        working-directory: ./backend
        run: |
          docker build \
            --tag backend-ci \
            --file Dockerfile.backend.ci \
            .
          docker run --rm backend-ci

  docker:
    name: Build & Push Docker Image
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
