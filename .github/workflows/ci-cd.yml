name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CARGO_TEAM_COLOR: always
  NODE_VERSION: 20.18.0
  RUST_VERSION: 1.80.0
  PNPM_VERSION: 9.12.2

jobs:
  frontend:
    name: Frontend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./web
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"
          cache-dependency-path: "./web/pnpm-lock.yaml"

      - name: Display environment info
        run: |
          node --version
          pnpm --version
          pwd
          ls -la

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build
        run: pnpm build

  backend:
    name: Backend Build & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v3

      - name: Install GStreamer dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
              gstreamer1.0-tools \
              gstreamer1.0-plugins-base \
              gstreamer1.0-plugins-good \
              gstreamer1.0-plugins-bad \
              gstreamer1.0-plugins-ugly \
              gstreamer1.0-libav \
              pkg-config \
              libgstreamer1.0-dev \
              libgstreamer-plugins-base1.0-dev \
              sqlite3

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION }}
          override: true
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Check formatting
        run: cargo fmt -- --check

      #   - name: Run clippy
      #     run: cargo clippy -- -D warnings

      - name: Run tests
        run: cargo test

    #   - name: Build
    #     run: cargo build --release
